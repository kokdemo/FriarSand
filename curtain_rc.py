# coding: utf-8
import RPi.GPIO as GPIO
import time
import sys

rf = 4

codes = {
    'A': {
        'close': [
            '10100011001101010011010111111111111111111111111100001011011100101',
            '10100011001101010011010111111111000000010000000000001011011101011',
            '10100011001101010011010111111111000000100000000000001011011101101',
            '10100011001101010011010111111111000001000000000000001011011110001',
            '10100011001101010011010111111111000010000000000000001011011111001',
            '10100011001101010011010111111111000100000000000000001011100001001',
            '10100011001101010011010111111111001000000000000000001011100101001',
            '10100011001101010011010111111111010000000000000000001011101101001',
            '10100011001101010011010111111111100000000000000000001011111101001',
            '10100011001101010011010111111111000000000000000100001011011101011',
            '10100011001101010011010111111111000000000000001000001011011101101',
            '10100011001101010011010111111111000000000000010000001011011110001',
            '10100011001101010011010111111111000000000000100000001011011111001',
            '10100011001101010011010111111111000000000001000000001011100001001',
            '10100011001101010011010111111111000000000010000000001011100101001',
            '10100011001101010011010111111111000000000100000000001011101101001',
            '10100011001101010011010111111111000000001000000000001011111101001'
        ],
        'stop': [
            '10100011001101010011010111111111111111111111111100100011100010101',
            '10100011001101010011010111111111000000010000000000100011100011011',
            '10100011001101010011010111111111000000100000000000100011100011101',
            '10100011001101010011010111111111000001000000000000100011100100001',
            '10100011001101010011010111111111000010000000000000100011100101001',
            '10100011001101010011010111111111000100000000000000100011100111001',
            '10100011001101010011010111111111001000000000000000100011101011001',
            '10100011001101010011010111111111010000000000000000100011110011001',
            '10100011001101010011010111111111100000000000000000100011000011001',
            '10100011001101010011010111111111000000000000000100100011100011011',
            '10100011001101010011010111111111000000000000001000100011100011101',
            '10100011001101010011010111111111000000000000010000100011100100001',
            '10100011001101010011010111111111000000000000100000100011100101001',
            '10100011001101010011010111111111000000000001000000100011100111001',
            '10100011001101010011010111111111000000000010000000100011101011001',
            '10100011001101010011010111111111000000000100000000100011110011001',
            '10100011001101010011010111111111000000001000000000100011000011001'
        ],
        'open': [
            '10100011001101010011010111111111111111111111111101000011101010101',
            '10100011001101010011010111111111000000010000000001000011101011011',
            '10100011001101010011010111111111000000100000000001000011101011101',
            '10100011001101010011010111111111000001000000000001000011101100001',
            '10100011001101010011010111111111000010000000000001000011101101001',
            '10100011001101010011010111111111000100000000000001000011101111001',
            '10100011001101010011010111111111001000000000000001000011110011001',
            '10100011001101010011010111111111010000000000000001000011111011001',
            '10100011001101010011010111111111100000000000000001000011001011001',
            '10100011001101010011010111111111000000000000000101000011101011011',
            '10100011001101010011010111111111000000000000001001000011101011101',
            '10100011001101010011010111111111000000000000010001000011101100001',
            '10100011001101010011010111111111000000000000100001000011101101001',
            '10100011001101010011010111111111000000000001000001000011101111001',
            '10100011001101010011010111111111000000000010000001000011110011001',
            '10100011001101010011010111111111000000000100000001000011111011001',
            '10100011001101010011010111111111000000001000000001000011001011001'
        ]
    },
    'B': {
        'close': [
            '10100011001101010011010111100010111111111111111100001011010101011',
            '10100011001101010011010111100010000000010000000000001011010110001',
            '10100011001101010011010111100010000000100000000000001011010110011',
            '10100011001101010011010111100010000001000000000000001011010110111',
            '10100011001101010011010111100010000010000000000000001011010111111',
            '10100011001101010011010111100010000100000000000000001011011001111',
            '10100011001101010011010111100010001000000000000000001011011101111',
            '10100011001101010011010111100010010000000000000000001011100101111',
            '10100011001101010011010111100010100000000000000000001011110101111',
            '10100011001101010011010111100010000000000000000100001011010110001',
            '10100011001101010011010111100010000000000000001000001011010110011',
            '10100011001101010011010111100010000000000000010000001011010110111',
            '10100011001101010011010111100010000000000000100000001011010111111',
            '10100011001101010011010111100010000000000001000000001011011001111',
            '10100011001101010011010111100010000000000010000000001011011101111',
            '10100011001101010011010111100010000000000100000000001011100101111',
            '10100011001101010011010111100010000000001000000000001011110101111'
        ],
        'stop': [
            '10100011001101010011010111100010111111111111111100100011011011011',
            '10100011001101010011010111100010000000010000000000100011011100001',
            '10100011001101010011010111100010000000100000000000100011011100011',
            '10100011001101010011010111100010000001000000000000100011011100111',
            '10100011001101010011010111100010000010000000000000100011011101111',
            '10100011001101010011010111100010000100000000000000100011011111111',
            '10100011001101010011010111100010001000000000000000100011100011111',
            '10100011001101010011010111100010010000000000000000100011101011111',
            '10100011001101010011010111100010100000000000000000100011111011111',
            '10100011001101010011010111100010000000000000000100100011011100001',
            '10100011001101010011010111100010000000000000001000100011011100011',
            '10100011001101010011010111100010000000000000010000100011011100111',
            '10100011001101010011010111100010000000000000100000100011011101111',
            '10100011001101010011010111100010000000000001000000100011011111111',
            '10100011001101010011010111100010000000000010000000100011100011111',
            '10100011001101010011010111100010000000000100000000100011101011111',
            '10100011001101010011010111100010000000001000000000100011111011111'
        ],
        'open': [
            '10100011001101010011010111100010111111111111111101000011100011011',
            '10100011001101010011010111100010000000010000000001000011100100001',
            '10100011001101010011010111100010000000100000000001000011100100011',
            '10100011001101010011010111100010000001000000000001000011100100111',
            '10100011001101010011010111100010000010000000000001000011100101111',
            '10100011001101010011010111100010000100000000000001000011100111111',
            '10100011001101010011010111100010001000000000000001000011101011111',
            '10100011001101010011010111100010010000000000000001000011110011111',
            '10100011001101010011010111100010100000000000000001000011000011111',
            '10100011001101010011010111100010000000000000000101000011100100001',
            '10100011001101010011010111100010000000000000001001000011100100011',
            '10100011001101010011010111100010000000000000010001000011100100111',
            '10100011001101010011010111100010000000000000100001000011100101111',
            '10100011001101010011010111100010000000000001000001000011100111111',
            '10100011001101010011010111100010000000000010000001000011101011111',
            '10100011001101010011010111100010000000000100000001000011110011111',
            '10100011001101010011010111100010000000001000000001000011000011111'
        ]
    }
}

help_prompt = '''
    请按照 <ab> <number> <op> 的方式提供参数

    ab: 'A' or 'B'，区分两个遥控，遥控背面有写 A B
    number: 被控制的窗帘的编号，1 - 16 为单个，0 为全部
    op: 操作
        'close'，相当于遥控的‘上’
        'stop'，相当于遥控的‘停’
        'open'，相当于遥控的‘下’

    例子：

    B 0 close
'''


def rc(ab, number, op):
    '''
    ab: 'A' or 'B'，区分两个遥控，遥控背面有写 A B
    number: 被控制的窗帘的编号，1 - 16 为单个，0 为全部
    op: 操作
        'close'，相当于遥控的‘上’
        'stop'，相当于遥控的‘停’
        'open'，相当于遥控的‘下’
    '''
    # 检查参数
    # 根据参数找到 code
    code = codes[ab][op][int(number)]
    if not code:
        print('编码错误')
    print('Start...')
    print('Setup...')
    setup()
    print('Loop...')
    try:
        send_one(code)
    except:
        print('Cleanup...')
        GPIO.cleanup()
    print('OK~')


def delay_ms(ms):
    time.sleep(ms / 1000.0)


def delay_us(us):
    time.sleep(us / 1000000.0)


def setup():
    GPIO.setmode(GPIO.BCM)
    GPIO.setwarnings(False)
    GPIO.setup(rf, GPIO.OUT)
    GPIO.output(rf, 0)


def send_one(code):
    idle()
    for i in xrange(4):
        header()
        for c in code:
            one_bit(c)
    idle()


def idle():
    GPIO.output(rf, 0)
    delay_us(200)


def header():
    GPIO.output(rf, 0)
    delay_us(700)
    GPIO.output(rf, 1)
    delay_us(4900)
    GPIO.output(rf, 0)
    delay_us(600)


def one_bit(c):
    if c == '1':
        GPIO.output(rf, 1)
        delay_us(600)
        GPIO.output(rf, 0)
        delay_us(200)
    else:
        GPIO.output(rf, 1)
        delay_us(200)
        GPIO.output(rf, 0)
        delay_us(600)


def main():
    if len(sys.argv) != 4:
        print(help_prompt)
    else:
        op = sys.argv[3]
        if op == 'c':
            op = 'close'
        elif op == 's':
            op = 'stop'
        elif op == 'o':
            op = 'open'
        rc(sys.argv[1], sys.argv[2], op)
    # rc('B', 0, 'close')

if __name__ == '__main__':
    main()
